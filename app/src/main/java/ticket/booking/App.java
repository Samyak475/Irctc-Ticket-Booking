/*
 * This source file was generated by the Gradle 'init' task
 */
package ticket.booking;

import ticket.booking.entities.Train;
import ticket.booking.entities.User;
import ticket.booking.services.UserBookingService;
import ticket.booking.util.UserServiceUtil;

import java.io.IOException;
import java.util.*;

public class App {


    public static void main(String[] args) {
        System.out.println("Welcome to IRCTC Application");
        Scanner scanner = new Scanner(System.in);
        int options = 0;
        UserBookingService userBookingService;
        try {
            userBookingService = new UserBookingService();

        }catch (IOException  e){
            System.out.println("Error in fetching the user"+e.getMessage());
            return ;
        }

        while(options!=7){
            System.out.println("1: SignUp");
            System.out.println("2: Login");
            System.out.println("3: FetchTicket");
            System.out.println("4: SearchTrain");
            System.out.println("5: Book a Seat");
            System.out.println("6: Cancel a Booking");
            System.out.println("7: Exit App");
            options = scanner.nextInt();
            Train trainSelectedForBooking = new Train();
            switch(options) {
                case 1:
                    System.out.println("Enter User Name to signup ");
                    String nameToSignUp = scanner.next();
                    System.out.println("Enter Password to signup ");
                    String passwordToSignUp = scanner.next();
                    User userToSignUp = new User(nameToSignUp, passwordToSignUp, UserServiceUtil.hashPassword(passwordToSignUp) , new ArrayList<>() , UUID.randomUUID().toString());
                    userBookingService.signUp(userToSignUp);
                    break;

                case 2:
                    System.out.println("Enter User Name to Login");
                    String nameToLogin = scanner.next();
                    System.out.println("Enter Password to Login in");
                    String passwordToLogin = scanner.next();
                    User userToLogin = new User(nameToLogin, passwordToLogin, UserServiceUtil.hashPassword(passwordToLogin) , new ArrayList<>() , UUID.randomUUID().toString());
                    try{
                        userBookingService = new UserBookingService(userToLogin);
                    } catch (IOException e) {
                        System.out.println("Error in fetching the user");
                        return ;
                    }
                    break;
                case 3:
                    System.out.println("Fetch Users All Bookings");
                    userBookingService.fetchUsersBooking();
                    break;
                case 4:
                    System.out.println("Train Search from Source to Destination");
                    System.out.println("Enter Source :");
                    String source = scanner.next();
                    System.out.println("Enter Destination :");
                    String destination = scanner.next();

                    List<Train> trainsAvailable = userBookingService.getTrain(source , destination );
                    for ( Train t : trainsAvailable){
                        System.out.println("Train id : " + t.getTrainId());
                        for(Map.Entry<String , String > station : t.getStationTime().entrySet()){
                            System.out.println(station.getKey() + "will be reached at time : " + station.getValue());
                        }
                        System.out.println(" Select the train to book ticket");
                        trainSelectedForBooking = trainsAvailable.get(scanner.nextInt());
                    }
                    break;
                case 5:
                    System.out.println("Train select to book ticket : "+ trainSelectedForBooking);
                    List<List<Integer>> seats = trainSelectedForBooking.getSeats();
                    System.out.println("Select the seat from available to book the ticket " + seats);
                    int row = scanner.nextInt();
                    int column = scanner.nextInt();
                    String bookedSeat = userBookingService.bookSeat(trainSelectedForBooking , row , column);
                    break;
                default:
                    break;

            }
        }
    }
}
